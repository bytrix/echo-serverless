{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport React, { useRef, useState } from \"react\";\n\nconst HeaderMenu = ({\n  children\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      margin: '22px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nconst Item = props => {\n  const {\n    children,\n    popup,\n    popupOffset\n  } = props;\n  const {\n    0: popupVisible,\n    1: setPopupVisible\n  } = useState(false);\n  const itemRef = useRef();\n  return __jsx(React.Fragment, null, __jsx(motion.button, {\n    ref: itemRef,\n    whileTap: {\n      scale: 0.9\n    },\n    style: {\n      fontSize: 22,\n      margin: 8,\n      cursor: 'pointer',\n      // backgroundColor: 'transparent',\n      backgroundColor: 'blue',\n      border: 'none',\n      outline: 'none'\n    },\n    onClick: () => {\n      setPopupVisible(true);\n    },\n    onBlur: () => {\n      setPopupVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, children), popup && popupVisible && /*#__PURE__*/React.cloneElement(popup, {\n    style: {\n      backgroundColor: 'red',\n      position: 'absolute',\n      width: 100,\n      top: itemRef.current.offsetTop + itemRef.current.offsetHeight + popupOffset[0],\n      left: itemRef.current.offsetLeft - (100 - itemRef.current.offsetWidth) + popupOffset[1]\n    }\n  }));\n};\n\nexport { Item };\nexport default HeaderMenu;","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx"],"names":["motion","React","useRef","useState","HeaderMenu","children","margin","Item","props","popup","popupOffset","popupVisible","setPopupVisible","itemRef","scale","fontSize","cursor","backgroundColor","border","outline","cloneElement","style","position","width","top","current","offsetTop","offsetHeight","left","offsetLeft","offsetWidth"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,SACI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CAVD;;AAiBA,MAAME,IAAI,GAAIC,KAAD,IAAsB;AAC/B,QAAM;AAAEH,IAAAA,QAAF;AAAYI,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAmCF,KAAzC;AACA,QAAM;AAAA,OAACG,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMU,OAAO,GAAGX,MAAM,EAAtB;AACA,SACI,4BACI,MAAC,MAAD,CAAQ,MAAR;AACI,IAAA,GAAG,EAAEW,OADT;AAEI,IAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KAFd;AAKI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHT,MAAAA,MAAM,EAAE,CAFL;AAGHU,MAAAA,MAAM,EAAE,SAHL;AAIH;AACAC,MAAAA,eAAe,EAAE,MALd;AAMHC,MAAAA,MAAM,EAAE,MANL;AAOHC,MAAAA,OAAO,EAAE;AAPN,KALX;AAcI,IAAA,OAAO,EAAE,MAAM;AACXP,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAhBL;AAiBI,IAAA,MAAM,EAAE,MAAM;AACVA,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBKP,QArBL,CADJ,EAwBKI,KAAK,IAAIE,YAAT,iBAAyBV,KAAK,CAACmB,YAAN,CAAmBX,KAAnB,EAA0B;AAChDY,IAAAA,KAAK,EAAE;AACHJ,MAAAA,eAAe,EAAE,KADd;AAEHK,MAAAA,QAAQ,EAAE,UAFP;AAGHC,MAAAA,KAAK,EAAE,GAHJ;AAIHC,MAAAA,GAAG,EAAEX,OAAO,CAACY,OAAR,CAAgBC,SAAhB,GAA4Bb,OAAO,CAACY,OAAR,CAAgBE,YAA5C,GAA2DjB,WAAW,CAAC,CAAD,CAJxE;AAKHkB,MAAAA,IAAI,EAAEf,OAAO,CAACY,OAAR,CAAgBI,UAAhB,IAA8B,MAAMhB,OAAO,CAACY,OAAR,CAAgBK,WAApD,IAAmEpB,WAAW,CAAC,CAAD;AALjF;AADyC,GAA1B,CAxB9B,CADJ;AAoCH,CAxCD;;AA0CA,SACIH,IADJ;AAIA,eAAeH,UAAf","sourcesContent":["import { motion } from \"framer-motion\"\nimport React, { useRef, useState } from \"react\"\nimport ReactDOM from 'react-dom'\n\nconst HeaderMenu = ({ children }) => {\n    return (\n        <div\n            style={{\n                margin: '22px 0px'\n            }}\n        >\n            {children}\n        </div>\n    )\n}\n\ninterface ItemProps {\n    children: React.ReactElement\n    popup?: React.ReactElement\n}\n\nconst Item = (props: ItemProps) => {\n    const { children, popup, popupOffset } = props\n    const [popupVisible, setPopupVisible] = useState(false)\n    const itemRef = useRef()\n    return (\n        <>\n            <motion.button\n                ref={itemRef}\n                whileTap={{\n                    scale: 0.9\n                }}\n                style={{\n                    fontSize: 22,\n                    margin: 8,\n                    cursor: 'pointer',\n                    // backgroundColor: 'transparent',\n                    backgroundColor: 'blue',\n                    border: 'none',\n                    outline: 'none'\n                }}\n                onClick={() => {\n                    setPopupVisible(true)\n                }}\n                onBlur={() => {\n                    setPopupVisible(false)\n                }}\n            >\n                {children}\n            </motion.button>\n            {popup && popupVisible && React.cloneElement(popup, {\n                style: {\n                    backgroundColor: 'red',\n                    position: 'absolute',\n                    width: 100,\n                    top: itemRef.current.offsetTop + itemRef.current.offsetHeight + popupOffset[0],\n                    left: itemRef.current.offsetLeft - (100 - itemRef.current.offsetWidth) + popupOffset[1]\n                }\n            })}\n        </>\n    )\n}\n\nexport {\n    Item\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}