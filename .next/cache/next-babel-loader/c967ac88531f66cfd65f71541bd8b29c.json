{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useState } from \"react\";\n\nvar Dropdown = function Dropdown(_ref) {\n  _s();\n\n  var children = _ref.children,\n      popup = _ref.popup;\n\n  var _useState = useState(false),\n      popupVisible = _useState[0],\n      setPopupVisible = _useState[1];\n\n  return __jsx(React.Fragment, null, popupVisible ? /*#__PURE__*/React.cloneElement(popup, {\n    style: {\n      position: 'absolute',\n      top: 100\n    }\n  }) : null, /*#__PURE__*/React.cloneElement(children, {\n    onMouseEnter: function onMouseEnter() {\n      setPopupVisible(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      setPopupVisible(false);\n    }\n  }));\n};\n\n_s(Dropdown, \"KlOuvHsP/IaS04Y4fL78E4fneOE=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/Dropdown/index.tsx"],"names":["React","useState","Dropdown","children","popup","popupVisible","setPopupVisible","cloneElement","style","position","top","onMouseEnter","onMouseLeave"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA;;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACEH,QAAQ,CAAC,KAAD,CADV;AAAA,MAC/BI,YAD+B;AAAA,MACjBC,eADiB;;AAEtC,SACI,4BAEKD,YAAY,gBAAGL,KAAK,CAACO,YAAN,CAAmBH,KAAnB,EAA0B;AACtCI,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,GAAG,EAAE;AAFF;AAD+B,GAA1B,CAAH,GAKR,IAPT,eASKV,KAAK,CAACO,YAAN,CAAmBJ,QAAnB,EAA6B;AAC1BQ,IAAAA,YAAY,EAAE,wBAAM;AAChBL,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAHyB;AAI1BM,IAAAA,YAAY,EAAE,wBAAM;AAChBN,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AANyB,GAA7B,CATL,CADJ;AAoBH,CAtBD;;GAAMJ,Q;;KAAAA,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\nimport { useState } from \"react\"\n\nconst Dropdown = ({ children, popup }) => {\n    const [popupVisible, setPopupVisible] = useState(false)\n    return (\n        <>\n            {/* {popupVisible ? popup : null} */}\n            {popupVisible ? React.cloneElement(popup, {\n                style: {\n                    position: 'absolute',\n                    top: 100\n                }\n            }) : null}\n            {/* {children} */}\n            {React.cloneElement(children, {\n                onMouseEnter: () => {\n                    setPopupVisible(true)\n                },\n                onMouseLeave: () => {\n                    setPopupVisible(false)\n                }\n            })}\n        </>\n    )\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}