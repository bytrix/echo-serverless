{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport React, { useRef, useState } from \"react\";\nconst POPUP_WIDTH = 100;\n\nconst HeaderMenu = ({\n  children\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      margin: '22px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nconst Item = props => {\n  const {\n    children,\n    popup,\n    popupOffset\n  } = props;\n  const {\n    0: popupVisible,\n    1: setPopupVisible\n  } = useState(false);\n  const itemRef = useRef();\n  return __jsx(React.Fragment, null, __jsx(motion.button, {\n    ref: itemRef,\n    whileTap: {\n      scale: 0.9\n    },\n    style: {\n      fontSize: 22,\n      margin: 8,\n      cursor: 'pointer',\n      backgroundColor: 'transparent',\n      // backgroundColor: 'blue',\n      border: 'none' // outline: 'none'\n\n    },\n    onClick: () => {\n      setPopupVisible(true);\n    },\n    onBlur: () => {\n      setPopupVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, children), popup && popupVisible && __jsx(motion.div, {\n    style: {\n      // backgroundColor: 'red',\n      position: 'absolute',\n      width: POPUP_WIDTH,\n      boxShadow: '0 2px 8px -2px rgba(0,0,0,0.3)',\n      top: itemRef.current.offsetTop + itemRef.current.offsetHeight + popupOffset[0],\n      left: itemRef.current.offsetLeft - (POPUP_WIDTH - itemRef.current.offsetWidth) + popupOffset[1]\n    },\n    initial: {\n      y: 3\n    },\n    animate: {\n      y: 0\n    },\n    onClick: () => {\n      itemRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, popup));\n};\n\nexport { Item };\nexport default HeaderMenu;","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx"],"names":["motion","React","useRef","useState","POPUP_WIDTH","HeaderMenu","children","margin","Item","props","popup","popupOffset","popupVisible","setPopupVisible","itemRef","scale","fontSize","cursor","backgroundColor","border","position","width","boxShadow","top","current","offsetTop","offsetHeight","left","offsetLeft","offsetWidth","y","focus"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,MAAMC,WAAW,GAAG,GAApB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,SACI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CAVD;;AAiBA,MAAME,IAAI,GAAIC,KAAD,IAAsB;AAC/B,QAAM;AAAEH,IAAAA,QAAF;AAAYI,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAmCF,KAAzC;AACA,QAAM;AAAA,OAACG,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMW,OAAO,GAAGZ,MAAM,EAAtB;AACA,SACI,4BACI,MAAC,MAAD,CAAQ,MAAR;AACI,IAAA,GAAG,EAAEY,OADT;AAEI,IAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KAFd;AAKI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHT,MAAAA,MAAM,EAAE,CAFL;AAGHU,MAAAA,MAAM,EAAE,SAHL;AAIHC,MAAAA,eAAe,EAAE,aAJd;AAKH;AACAC,MAAAA,MAAM,EAAE,MANL,CAOH;;AAPG,KALX;AAcI,IAAA,OAAO,EAAE,MAAM;AACXN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAhBL;AAiBI,IAAA,MAAM,EAAE,MAAM;AACVA,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBKP,QArBL,CADJ,EAiCKI,KAAK,IAAIE,YAAT,IACG,MAAC,MAAD,CAAQ,GAAR;AACI,IAAA,KAAK,EAAE;AACH;AACAQ,MAAAA,QAAQ,EAAE,UAFP;AAGHC,MAAAA,KAAK,EAAEjB,WAHJ;AAIHkB,MAAAA,SAAS,EAAE,gCAJR;AAKHC,MAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgBC,SAAhB,GAA4BX,OAAO,CAACU,OAAR,CAAgBE,YAA5C,GAA2Df,WAAW,CAAC,CAAD,CALxE;AAMHgB,MAAAA,IAAI,EAAEb,OAAO,CAACU,OAAR,CAAgBI,UAAhB,IAA8BxB,WAAW,GAAGU,OAAO,CAACU,OAAR,CAAgBK,WAA5D,IAA2ElB,WAAW,CAAC,CAAD;AANzF,KADX;AASI,IAAA,OAAO,EAAE;AACLmB,MAAAA,CAAC,EAAE;AADE,KATb;AAYI,IAAA,OAAO,EAAE;AACLA,MAAAA,CAAC,EAAE;AADE,KAZb;AAeI,IAAA,OAAO,EAAE,MAAM;AACXhB,MAAAA,OAAO,CAACU,OAAR,CAAgBO,KAAhB;AACH,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBKrB,KAnBL,CAlCR,CADJ;AA2DH,CA/DD;;AAiEA,SACIF,IADJ;AAIA,eAAeH,UAAf","sourcesContent":["import { motion } from \"framer-motion\"\nimport React, { useRef, useState } from \"react\"\n\nconst POPUP_WIDTH = 100\n\nconst HeaderMenu = ({ children }) => {\n    return (\n        <div\n            style={{\n                margin: '22px 0px'\n            }}\n        >\n            {children}\n        </div>\n    )\n}\n\ninterface ItemProps {\n    children: React.ReactElement\n    popup?: React.ReactElement\n}\n\nconst Item = (props: ItemProps) => {\n    const { children, popup, popupOffset } = props\n    const [popupVisible, setPopupVisible] = useState(false)\n    const itemRef = useRef()\n    return (\n        <>\n            <motion.button\n                ref={itemRef}\n                whileTap={{\n                    scale: 0.9\n                }}\n                style={{\n                    fontSize: 22,\n                    margin: 8,\n                    cursor: 'pointer',\n                    backgroundColor: 'transparent',\n                    // backgroundColor: 'blue',\n                    border: 'none',\n                    // outline: 'none'\n                }}\n                onClick={() => {\n                    setPopupVisible(true)\n                }}\n                onBlur={() => {\n                    setPopupVisible(false)\n                }}\n            >\n                {children}\n            </motion.button>\n            {/* {popup && popupVisible && React.cloneElement(popup, {\n                style: {\n                    backgroundColor: 'red',\n                    position: 'absolute',\n                    width: POPUP_WIDTH,\n                    top: itemRef.current.offsetTop + itemRef.current.offsetHeight + popupOffset[0],\n                    left: itemRef.current.offsetLeft - (POPUP_WIDTH - itemRef.current.offsetWidth) + popupOffset[1]\n                }\n            })} */}\n            {popup && popupVisible && (\n                <motion.div\n                    style={{\n                        // backgroundColor: 'red',\n                        position: 'absolute',\n                        width: POPUP_WIDTH,\n                        boxShadow: '0 2px 8px -2px rgba(0,0,0,0.3)',\n                        top: itemRef.current.offsetTop + itemRef.current.offsetHeight + popupOffset[0],\n                        left: itemRef.current.offsetLeft - (POPUP_WIDTH - itemRef.current.offsetWidth) + popupOffset[1]\n                    }}\n                    initial={{\n                        y: 3\n                    }}\n                    animate={{\n                        y: 0\n                    }}\n                    onClick={() => {\n                        itemRef.current.focus()\n                    }}\n                >\n                    {popup}\n                </motion.div>\n            )}\n        </>\n    )\n}\n\nexport {\n    Item\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}