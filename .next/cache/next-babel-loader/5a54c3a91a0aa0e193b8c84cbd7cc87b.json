{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/code/serverless-demo/echo/components/CardBook/CardImage.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from 'framer-motion';\nimport { BiPlay } from 'react-icons/bi';\nimport { BsImages } from 'react-icons/bs';\nimport Skeleton from '../Skeleton';\n\nconst CardImage = props => {\n  let CardTypes;\n\n  (function (CardTypes) {\n    CardTypes[CardTypes[\"IMG\"] = 0] = \"IMG\";\n    CardTypes[CardTypes[\"VID\"] = 1] = \"VID\";\n  })(CardTypes || (CardTypes = {}));\n\n  const {\n    src,\n    onClick,\n    type,\n    showImageIcon\n  } = props; // const imageRef = useRef<HTMLImageElement>(null)\n  // useEffect(() => {\n  //     const imageBuffer = new Image()\n  //     if(src) {\n  //         imageBuffer.src = src\n  //         imageBuffer.onload = () => {\n  //             if(imageRef.current) {\n  //                 imageRef.current.src = imageBuffer.src\n  //             }\n  //         }\n  //     }\n  // }, [])\n\n  return __jsx(motion.div, {\n    initial: {\n      translateY: 0\n    },\n    whileTap: {\n      translateY: 1\n    },\n    transition: {\n      duration: 0.1\n    },\n    style: {\n      position: 'relative'\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, type === CardTypes.VID && __jsx(BiPlay, {\n    style: {\n      color: 'white',\n      fontSize: 18,\n      position: 'absolute',\n      // backgroundColor: 'rgba(0,0,0,0.4)',\n      // filter: 'drop-shadow(0px 0px 0.75px rgba(0,0,0,0.42))',\n      filter: 'drop-shadow(0 0 .75px rgba(0,0,0,.42)) drop-shadow(0 1px .5px rgba(0,0,0,.18)) drop-shadow(0 2px 3px rgba(0,0,0,.2))',\n      right: 0,\n      padding: 2,\n      // borderRadius: '100%',\n      margin: 8,\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), type === CardTypes.IMG && showImageIcon && __jsx(BsImages, {\n    style: {\n      color: 'white',\n      fontSize: 18,\n      position: 'absolute',\n      // backgroundColor: 'rgba(0,0,0,0.4)',\n      // filter: 'drop-shadow(0px 0px 0.75px rgba(0,0,0,0.42))',\n      filter: 'drop-shadow(0 0 .75px rgba(0,0,0,.42)) drop-shadow(0 1px .5px rgba(0,0,0,.18)) drop-shadow(0 2px 3px rgba(0,0,0,.2))',\n      right: 0,\n      padding: 2,\n      // borderRadius: '100%',\n      margin: 8,\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), __jsx(Skeleton.Image, {\n    width: \"100%\",\n    style: {\n      cursor: 'pointer',\n      borderRadius: 6\n    },\n    src: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CardImage;","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/CardBook/CardImage.tsx"],"names":["motion","BiPlay","BsImages","Skeleton","CardImage","props","CardTypes","src","onClick","type","showImageIcon","translateY","duration","position","VID","color","fontSize","filter","right","padding","margin","cursor","IMG","borderRadius"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA,MACzBC,SADyB;;AAAA,aACzBA,SADyB;AACzBA,IAAAA,SADyB,CACzBA,SADyB;AACzBA,IAAAA,SADyB,CACzBA,SADyB;AAAA,KACzBA,SADyB,KACzBA,SADyB;;AAK9B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,MAAwCL,KAA9C,CAL8B,CAM9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACI,MAAC,MAAD,CAAQ,GAAR;AACI,IAAA,OAAO,EAAE;AACLM,MAAAA,UAAU,EAAE;AADP,KADb;AAII,IAAA,QAAQ,EAAE;AACNA,MAAAA,UAAU,EAAE;AADN,KAJd;AAOI,IAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF,KAPhB;AAUI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE;AADP,KAVX;AAaI,IAAA,OAAO,EAAEL,OAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBQC,IAAI,KAAKH,SAAS,CAACQ,GAAnB,IACI,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,QAAQ,EAAE,EAFP;AAGHH,MAAAA,QAAQ,EAAE,UAHP;AAIH;AACA;AACAI,MAAAA,MAAM,EAAE,sHANL;AAOHC,MAAAA,KAAK,EAAE,CAPJ;AAQHC,MAAAA,OAAO,EAAE,CARN;AASH;AACAC,MAAAA,MAAM,EAAE,CAVL;AAWHC,MAAAA,MAAM,EAAE;AAXL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBZ,EAmCQZ,IAAI,KAAKH,SAAS,CAACgB,GAAnB,IAA0BZ,aAA1B,IACI,MAAC,QAAD;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,QAAQ,EAAE,EAFP;AAGHH,MAAAA,QAAQ,EAAE,UAHP;AAIH;AACA;AACAI,MAAAA,MAAM,EAAE,sHANL;AAOHC,MAAAA,KAAK,EAAE,CAPJ;AAQHC,MAAAA,OAAO,EAAE,CARN;AASH;AACAC,MAAAA,MAAM,EAAE,CAVL;AAWHC,MAAAA,MAAM,EAAE;AAXL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCZ,EAqDI,MAAC,QAAD,CAAU,KAAV;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,KAAK,EAAE;AACHA,MAAAA,MAAM,EAAE,SADL;AAEHE,MAAAA,YAAY,EAAE;AAFX,KAFX;AAMI,IAAA,GAAG,EAAEhB,GANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDJ,CADJ;AAgEH,CAlFD;;AAoFA,eAAeH,SAAf","sourcesContent":["import { motion } from 'framer-motion'\nimport { BiPlay } from 'react-icons/bi'\nimport { BsImages } from 'react-icons/bs'\nimport Skeleton from '../Skeleton'\n\nconst CardImage = (props: any) => {\n    enum CardTypes {\n        IMG,\n        VID\n    }\n    const { src, onClick, type, showImageIcon } = props;\n    // const imageRef = useRef<HTMLImageElement>(null)\n    // useEffect(() => {\n    //     const imageBuffer = new Image()\n    //     if(src) {\n    //         imageBuffer.src = src\n    //         imageBuffer.onload = () => {\n    //             if(imageRef.current) {\n    //                 imageRef.current.src = imageBuffer.src\n    //             }\n    //         }\n    //     }\n    // }, [])\n    return (\n        <motion.div\n            initial={{\n                translateY: 0\n            }}\n            whileTap={{\n                translateY: 1,\n            }}\n            transition={{\n                duration: 0.1\n            }}\n            style={{\n                position: 'relative'\n            }}\n            onClick={onClick}\n        >\n            {\n                type === CardTypes.VID && (\n                    <BiPlay\n                        style={{\n                            color: 'white',\n                            fontSize: 18,\n                            position: 'absolute',\n                            // backgroundColor: 'rgba(0,0,0,0.4)',\n                            // filter: 'drop-shadow(0px 0px 0.75px rgba(0,0,0,0.42))',\n                            filter: 'drop-shadow(0 0 .75px rgba(0,0,0,.42)) drop-shadow(0 1px .5px rgba(0,0,0,.18)) drop-shadow(0 2px 3px rgba(0,0,0,.2))',\n                            right: 0,\n                            padding: 2,\n                            // borderRadius: '100%',\n                            margin: 8,\n                            cursor: 'pointer'\n                        }}\n                    />\n                )\n            }\n            {\n                type === CardTypes.IMG && showImageIcon && (\n                    <BsImages\n                        style={{\n                            color: 'white',\n                            fontSize: 18,\n                            position: 'absolute',\n                            // backgroundColor: 'rgba(0,0,0,0.4)',\n                            // filter: 'drop-shadow(0px 0px 0.75px rgba(0,0,0,0.42))',\n                            filter: 'drop-shadow(0 0 .75px rgba(0,0,0,.42)) drop-shadow(0 1px .5px rgba(0,0,0,.18)) drop-shadow(0 2px 3px rgba(0,0,0,.2))',\n                            right: 0,\n                            padding: 2,\n                            // borderRadius: '100%',\n                            margin: 8,\n                            cursor: 'pointer'\n                        }}\n                    />\n                )\n            }\n            <Skeleton.Image\n                width='100%'\n                style={{\n                    cursor: 'pointer',\n                    borderRadius: 6\n                }}\n                src={src}\n            />\n        </motion.div>\n    )\n}\n\nexport default CardImage"]},"metadata":{},"sourceType":"module"}