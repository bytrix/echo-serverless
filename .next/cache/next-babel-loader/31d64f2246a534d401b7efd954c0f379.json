{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\n\nvar HeaderMenu = function HeaderMenu(_ref) {\n  var children = _ref.children;\n  return __jsx(\"div\", {\n    style: {\n      margin: '22px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_c = HeaderMenu;\n\nvar Item = function Item(props) {\n  _s();\n\n  var children = props.children,\n      popup = props.popup;\n\n  var _useState = useState(false),\n      popupVisible = _useState[0],\n      setPopupVisible = _useState[1];\n\n  var itemRef = useRef();\n  return __jsx(React.Fragment, null, __jsx(motion.button, {\n    whileTap: {\n      scale: 0.9\n    },\n    style: {\n      fontSize: 22,\n      margin: 8,\n      cursor: 'pointer',\n      // backgroundColor: 'transparent',\n      backgroundColor: 'blue',\n      border: 'none',\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      setPopupVisible(true);\n    },\n    onBlur: function onBlur() {// alert('blue')\n      // setPopupVisible(false)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, children), popup && popupVisible && /*#__PURE__*/React.cloneElement(popup, {\n    style: {\n      backgroundColor: 'red',\n      position: 'absolute',\n      top: 100\n    }\n  }));\n};\n\n_s(Item, \"I2ajrgT7jrbWFb3gwX2lO906MG8=\");\n\n_c2 = Item;\nexport { Item };\nexport default HeaderMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderMenu\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/HeaderMenu/index.tsx"],"names":["motion","React","useState","HeaderMenu","children","margin","Item","props","popup","popupVisible","setPopupVisible","itemRef","useRef","scale","fontSize","cursor","backgroundColor","border","outline","cloneElement","style","position","top"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjC,SACI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CAVD;;KAAMD,U;;AAiBN,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAsB;AAAA;;AAAA,MACvBH,QADuB,GACHG,KADG,CACvBH,QADuB;AAAA,MACbI,KADa,GACHD,KADG,CACbC,KADa;;AAAA,kBAESN,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAExBO,YAFwB;AAAA,MAEVC,eAFU;;AAG/B,MAAMC,OAAO,GAAGC,MAAM,EAAtB;AACA,SACI,4BACI,MAAC,MAAD,CAAQ,MAAR;AACI,IAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KADd;AAII,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHT,MAAAA,MAAM,EAAE,CAFL;AAGHU,MAAAA,MAAM,EAAE,SAHL;AAIH;AACAC,MAAAA,eAAe,EAAE,MALd;AAMHC,MAAAA,MAAM,EAAE,MANL;AAOHC,MAAAA,OAAO,EAAE;AAPN,KAJX;AAaI,IAAA,OAAO,EAAE,mBAAM;AACXR,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAfL;AAgBI,IAAA,MAAM,EAAE,kBAAM,CACV;AACA;AACH,KAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBKN,QArBL,CADJ,EAwBKI,KAAK,IAAIC,YAAT,iBAAyBR,KAAK,CAACkB,YAAN,CAAmBX,KAAnB,EAA0B;AAChDY,IAAAA,KAAK,EAAE;AACHJ,MAAAA,eAAe,EAAE,KADd;AAEHK,MAAAA,QAAQ,EAAE,UAFP;AAGHC,MAAAA,GAAG,EAAE;AAHF;AADyC,GAA1B,CAxB9B,CADJ;AAkCH,CAtCD;;GAAMhB,I;;MAAAA,I;AAwCN,SACIA,IADJ;AAIA,eAAeH,UAAf","sourcesContent":["import { motion } from \"framer-motion\"\nimport React, { useState } from \"react\"\n\nconst HeaderMenu = ({ children }) => {\n    return (\n        <div\n            style={{\n                margin: '22px 0px'\n            }}\n        >\n            {children}\n        </div>\n    )\n}\n\ninterface ItemProps {\n    children: React.ReactElement\n    popup?: React.ReactElement\n}\n\nconst Item = (props: ItemProps) => {\n    const { children, popup } = props\n    const [popupVisible, setPopupVisible] = useState(false)\n    const itemRef = useRef()\n    return (\n        <>\n            <motion.button\n                whileTap={{\n                    scale: 0.9\n                }}\n                style={{\n                    fontSize: 22,\n                    margin: 8,\n                    cursor: 'pointer',\n                    // backgroundColor: 'transparent',\n                    backgroundColor: 'blue',\n                    border: 'none',\n                    outline: 'none'\n                }}\n                onClick={() => {\n                    setPopupVisible(true)\n                }}\n                onBlur={() => {\n                    // alert('blue')\n                    // setPopupVisible(false)\n                }}\n            >\n                {children}\n            </motion.button>\n            {popup && popupVisible && React.cloneElement(popup, {\n                style: {\n                    backgroundColor: 'red',\n                    position: 'absolute',\n                    top: 100\n                }\n            })}\n        </>\n    )\n}\n\nexport {\n    Item\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}