{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/code/serverless-demo/echo/components/CardBook/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nconst CardBook = props => {\n  const {\n    store,\n    onLoad,\n    post\n  } = props;\n  const {\n    title,\n    image,\n    count,\n    user,\n    type\n  } = post;\n  const {\n    PostModalStore\n  } = store;\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  const {\n    0: collect,\n    1: setCollect\n  } = useState(false);\n  return __jsx(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(CardImage, {\n    src: image,\n    onClick: () => {\n      console.log('PostModalStore', PostModalStore);\n      PostModalStore.open();\n    },\n    onLoad: onLoad,\n    type: type,\n    showImageIcon: count.images > 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, title), __jsx(CardAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    to: \"/user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, __jsx(UserAvatar // src=\"https://img.xiaohongshu.com/avatar/5f75d88ca8204500012c1379.jpg@240w_240h_90q_1e_1c_1x.jpg\"\n  , {\n    src: user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), __jsx(Username, {\n    to: \"/user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, user.username)), __jsx(CardActionButton, {\n    defaultIcon: __jsx(AiOutlineHeart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }\n    }),\n    activeIcon: __jsx(AiFillHeart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }),\n    value: count.likes,\n    active: like,\n    color: \"red\",\n    onClick: () => {\n      if (like) {\n        setLike(false);\n      } else {\n        setLike(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(CardActionButton, {\n    defaultIcon: __jsx(AiOutlineStar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }\n    }),\n    activeIcon: __jsx(AiFillStar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }),\n    color: \"#FAC35B\",\n    value: count.likes,\n    active: collect,\n    onClick: () => {\n      if (collect) {\n        setCollect(false);\n      } else {\n        setCollect(true);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n}; // export default inject('store')(observer(CardBook))\n\n\nexport default CardBook;","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/CardBook/index.tsx"],"names":["useState","CardBook","props","store","onLoad","post","title","image","count","user","type","PostModalStore","like","setLike","collect","setCollect","console","log","open","images","avatar","username","likes"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\ntype CardBookProps = {\n    // src: string,\n    // title: string,\n    post?: any,\n    store?: any,\n    loading?: boolean,\n    onLoad?: Function,\n    // user?: any,\n    // count?: any\n}\n\nconst CardBook = (props: CardBookProps) => {\n    const { store, onLoad, post } = props\n    const { title, image, count, user, type } = post\n    const { PostModalStore } = store\n    const [ like, setLike ] = useState(false)\n    const [ collect, setCollect ] = useState(false)\n    return (\n        <CardWrapper>\n            <CardImage\n                src={image}\n                onClick={() => {\n                    console.log('PostModalStore', PostModalStore)\n                    PostModalStore.open()\n                }}\n                onLoad={onLoad}\n                type={type}\n                showImageIcon={count.images > 1}\n            />\n            <CardTitle>{title}</CardTitle>\n            <CardAction>\n                <User>\n                    <Link to='/user'>\n                        <UserAvatar\n                            // src=\"https://img.xiaohongshu.com/avatar/5f75d88ca8204500012c1379.jpg@240w_240h_90q_1e_1c_1x.jpg\"\n                            src={user.avatar}\n                            />\n                    </Link>\n                    <Username to='/user'>{user.username}</Username>\n                </User>\n                <CardActionButton\n                    defaultIcon={<AiOutlineHeart />}\n                    activeIcon={<AiFillHeart />}\n                    value={count.likes}\n                    active={like}\n                    color='red'\n                    onClick={() => {\n                        if(like) {\n                            setLike(false)\n                        } else {\n                            setLike(true)\n                        }\n                    }}\n                />\n                <CardActionButton\n                    defaultIcon={<AiOutlineStar />}\n                    activeIcon={<AiFillStar />}\n                    color='#FAC35B'\n                    value={count.likes}\n                    active={collect}\n                    onClick={() => {\n                        if(collect) {\n                            setCollect(false)\n                        } else {\n                            setCollect(true)\n                        }\n                    }}\n                />\n                {/* <CardActionButton\n                    defaultIcon={<AiOutlineMessage />}\n                    value={23}\n                /> */}\n            </CardAction>\n        </CardWrapper>\n    )\n}\n\n// export default inject('store')(observer(CardBook))\nexport default CardBook"]},"metadata":{},"sourceType":"module"}