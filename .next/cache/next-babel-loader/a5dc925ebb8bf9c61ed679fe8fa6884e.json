{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst Dropdown = ({\n  children,\n  popup\n}) => {\n  const {\n    0: popupVisible,\n    1: setPopupVisible\n  } = useState(false);\n  console.log('popup', popup);\n  return __jsx(React.Fragment, null, popupVisible ? /*#__PURE__*/React.cloneElement(popup, {\n    style: _objectSpread({\n      position: 'absolute',\n      top: 60\n    }, popup.props.style)\n  }) : null, /*#__PURE__*/React.cloneElement(children, {\n    onClick: () => {\n      setPopupVisible(true);\n    },\n    onBlur: () => {\n      setPopupVisible(false);\n    }\n  }));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/jack/Desktop/code/serverless-demo/echo/components/Dropdown/index.tsx"],"names":["React","useState","Dropdown","children","popup","popupVisible","setPopupVisible","console","log","cloneElement","style","position","top","props","onClick","onBlur"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACtC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,SACI,4BACKC,YAAY,gBAAGL,KAAK,CAACS,YAAN,CAAmBL,KAAnB,EAA0B;AACtCM,IAAAA,KAAK;AACDC,MAAAA,QAAQ,EAAE,UADT;AAEDC,MAAAA,GAAG,EAAE;AAFJ,OAGER,KAAK,CAACS,KAAN,CAAYH,KAHd;AADiC,GAA1B,CAAH,GAMR,IAPT,eAQKV,KAAK,CAACS,YAAN,CAAmBN,QAAnB,EAA6B;AAC1BW,IAAAA,OAAO,EAAE,MAAM;AACXR,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAHyB;AAI1BS,IAAAA,MAAM,EAAE,MAAM;AACVT,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AANyB,GAA7B,CARL,CADJ;AAmBH,CAtBD;;AAwBA,eAAeJ,QAAf","sourcesContent":["import React from \"react\"\nimport { useState } from \"react\"\n\nconst Dropdown = ({ children, popup }) => {\n    const [popupVisible, setPopupVisible] = useState(false)\n    console.log('popup', popup)\n    return (\n        <>\n            {popupVisible ? React.cloneElement(popup, {\n                style: {\n                    position: 'absolute',\n                    top: 60,\n                    ...popup.props.style\n                }\n            }) : null}\n            {React.cloneElement(children, {\n                onClick: () => {\n                    setPopupVisible(true)\n                },\n                onBlur: () => {\n                    setPopupVisible(false)\n                }\n            })}\n        </>\n    )\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}